#!/usr/bin/env bash
set -euo pipefail

echo "Setting up"
echo ""

# Load shared environment variables
if test -f "/var/common/.env"; then
     while IFS="=" read PROP VAL; do
         # Check if environment variable doesn't exist before setting (prevent overwriting)
         test ! -z $(printenv $PROP) || export $PROP=$VAL
     done <<< $(grep -v '^$\|^\s*\#' /var/common/.env)
fi


if [ -z ${EMAIL_SMTP_HOST+x} ]; then
    echo "Not setting up mail"
else
    # Configure mSMTP
    test -d /etc/msmtp || mkdir /etc/msmtp
    echo "
account default
host $EMAIL_SMTP_HOST
from $EMAIL_AUTH_USER
auth on
port $EMAIL_SMTP_PORT
user $EMAIL_AUTH_USER
password $EMAIL_AUTH_PASS
logfile /var/log/msmtp.log
tls on
tls_starttls on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
" > /etc/msmtp/msmtp.conf
    touch /var/log/msmtp.log
    chmod 600 /etc/msmtp/msmtp.conf
    chown www-data /etc/msmtp/msmtp.conf /var/log/msmtp.log

    echo "Setting up mail"
    ## SETUP MAIL ##
    echo "[mail function]
sendmail_path=$(which msmtp) -C /etc/msmtp/msmtp.conf -t
" >> /usr/local/etc/php/conf.d/smtp.ini


    # Clear $EMAIL_AUTH_PASS to prevent leaking to applications
    export EMAIL_AUTH_PASS=""

fi


# Set ServerName - Prevents warnings
IFS=',' read -r FIRSTHOST OTHER_HOSTS <<< "$VIRTUAL_HOST"
echo "ServerName $FIRSTHOST" >> /etc/apache2/apache2.conf


# Create salts file if not exist
test -f "settings/wp-salt.php"|| {
    echo "<?php"
    curl https://api.wordpress.org/secret-key/1.1/salt/ 
} > settings/wp-salt.php

chown www-data:www-data /var/www/html/wp-content ; chmod 755 /var/www/html/wp-content


# Execute original entrypoint from core wordpress docker image
exec "$@"
